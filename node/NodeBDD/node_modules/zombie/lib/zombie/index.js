// Generated by CoffeeScript 1.3.3
var Browser, Path, Util, contextify, listen, visit;

Browser = require("./browser");

Path = require("path");

Util = require("util");

try {
  contextify = Path.resolve(require.resolve("jsdom"), "../../node_modules/contextify");
  require(contextify);
} catch (ex) {
  throw new Error("Zombie will not run correctly without the Contextify module");
}

visit = function(url, options, callback) {
  return new Browser(options).visit(url, options, callback);
};

listen = function(port, callback) {
  return require("./zombie/protocol").listen(port, callback);
};

console.depth = 0;

console.showHidden = false;

console.log = function() {
  var arg, formatted;
  formatted = (function() {
    var _i, _len, _results;
    _results = [];
    for (_i = 0, _len = arguments.length; _i < _len; _i++) {
      arg = arguments[_i];
      _results.push(typeof arg === "string" ? arg : Util.inspect(arg, console.showHidden, console.depth));
    }
    return _results;
  }).apply(this, arguments);
  if (typeof Util.format === 'function') {
    return process.stdout.write(Util.format.apply(this, formatted) + "\n");
  } else {
    return process.stdout.write(formatted.join(" ") + "\n");
  }
};

Browser.listen = listen;

Browser.visit = visit;

Browser.debug = !!process.env.DEBUG;

Browser.Browser = Browser;

module.exports = Browser;
