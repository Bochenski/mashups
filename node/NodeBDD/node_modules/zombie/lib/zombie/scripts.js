// Generated by CoffeeScript 1.3.3
var CoffeeScript, HTML, addInlineScriptSupport, raise;

HTML = require("jsdom").dom.level3.html;

try {
  CoffeeScript = require("coffee-script");
  HTML.languageProcessors.coffeescript = function(element, code, filename) {
    return this.javascript(element, CoffeeScript.compile(code), filename);
  };
} catch (ex) {

}

HTML.languageProcessors.javascript = function(element, code, filename) {
  var cast, doc, window;
  if (doc = element.ownerDocument) {
    window = doc.parentWindow;
    try {
      return window._evaluate(code, filename);
    } catch (error) {
      if (!(error instanceof Error)) {
        cast = new Error(error.message);
        cast.stack = error.stack;
        error = cast;
      }
      return raise({
        element: element,
        location: filename,
        from: __filename,
        error: error
      });
    }
  }
};

addInlineScriptSupport = function(document) {
  return document.addEventListener("DOMNodeInserted", function(event) {
    var node;
    node = event.target;
    if (node.tagName !== "SCRIPT") {
      return;
    }
    if (node.src) {
      return;
    }
    HTML.resourceLoader.enqueue(node, function() {
      var code, language;
      code = node.text;
      language = HTML.languageProcessors[node.language];
      if (code && language) {
        return language(this, code, document.location.href);
      }
    })();
  });
};

raise = function(_arg) {
  var document, element, error, event, from, line, location, message, partial, scope, window, _i, _len, _ref;
  element = _arg.element, location = _arg.location, from = _arg.from, scope = _arg.scope, error = _arg.error;
  document = element.ownerDocument || element;
  window = document.parentWindow;
  message = scope ? "" + scope + ": " + error.message : error.message;
  location || (location = document.location.href);
  partial = [];
  if (error.stack) {
    _ref = error.stack.split("\n");
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      line = _ref[_i];
      if (~line.indexOf("contextify/lib/contextify.js")) {
        break;
      }
      partial.push(line);
    }
  }
  partial.push("    in " + location);
  error.stack = partial.join("\n");
  event = document.createEvent("Event");
  event.initEvent("error", false, false);
  event.message = error.message;
  event.error = error;
  window.dispatchEvent(event);
};

module.exports = {
  raise: raise,
  addInlineScriptSupport: addInlineScriptSupport
};
